{"version":3,"sources":["Service/person.js","Filter.js","Notification.js","PersonForm.js","PhoneBook.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","showFilter","setshowFilter","classes","makeStyles","theme","root","margin","spacing","width","useStyles","className","TextField","value","label","variant","onChange","e","target","styles","success","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","fail","Notification","notification","style","PersonForm","newName","newNumber","addNewName","handleNameChange","handleNumberChange","press","marginLeft","extendedIcon","marginRight","Grid","container","onSubmit","noValidate","autoComplete","item","xs","Fab","aria-label","type","PhoneBook","persons","removeEntry","backgroundColor","palette","paper","filterUpperCase","toUpperCase","newPersonArray","filter","person","name","includes","console","log","map","Divider","ListItem","button","ListItemText","number","onClick","sort","a","b","App","useState","setPersons","setNewName","setNewNumber","setNotification","setSuccess","flexGrow","justifyItems","text","secondary","overflow","height","header1","textAlign","addFriend","justifyContent","useEffect","personsService","catch","error","showMessage","message","successNotification","setTimeout","Box","Paper","preventDefault","personObject","some","personId","find","updatedEntry","Object","assign","window","confirm","n","returnedPerson","concat","List","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88e7c5bc.chunk.js","sourcesContent":["import axios from \"axios\";\n\n//const baseUrl = \"http://localhost:3003/persons\";\nconst baseUrl = 'api/persons';\n\n// get rquest for all of json datas\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\n// post request to add new entry\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data)\n};\n\n// put request to update json db\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\n// delete request to delete from json data base \nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\n\n// exporting all of the functions \nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  remove: remove\n};\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst Filter = ({ showFilter, setshowFilter }) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n  const classes = useStyles();\n  const filterPersons = e => {\n    setshowFilter(e.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField id=\"outlined-basic\" value={showFilter} label=\"filter\" variant=\"outlined\"onChange={filterPersons} />\n    </div>\n  );\n};\n\nexport default Filter;","import React from \"react\";\n\n\nconst Notification = ({ notification, success }) => {\n  // console.log(notification);\n  // console.log(success);\n\n  // if there is no notification return null\n  if (notification === null) {\n    return null;\n  }\n\n  // if success renders the paticular (inLine) style \n  if (success)\n    return (\n      <div className=\"success\" style={styles.success}>\n        {notification}\n      </div>\n    );\n  else\n    return (\n      <div className=\"success\" style={styles.fail}>\n        {notification}\n      </div>\n    );\n};\n\nvar styles = {\n  success: {\n    color: \"green\",\n    background: \"white\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  fail: {\n    color: \"red\",\n    background: \"white\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n};\n\nexport default Notification;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\n\n\nconst PersonForm = ({\n  newName,\n  newNumber,\n  addNewName,\n  handleNameChange,\n  handleNumberChange\n}) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(2),\n        width: '50ch',\n      },\n    },\n    press: {\n      marginLeft: 75,\n      extendedIcon: {\n        marginRight: theme.spacing(1),\n      },\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <Grid container spacing={1}>\n      <form onSubmit={addNewName} className={classes.root} noValidate autoComplete=\"off\">\n        \n        {/* calls the function tracking values in the name input */}\n        {/* name: <input value={newName} onChange={handleNameChange} /> */}\n        <Grid item xs={12}>\n        <TextField id=\"outlined-basic\" className={classes.root} label=\"Name\" value={newName} onChange={handleNameChange} variant=\"outlined\" />\n        </Grid>\n        <Grid item  xs={12}>\n        {/* calls the function tracking values in the number input */}\n        <TextField id=\"outlined-basic\"  className={classes.root} value={newNumber} onChange={handleNumberChange} label=\"Number\" variant=\"outlined\" />\n        </Grid>\n        {/* calls the create request to add name and number */}\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"add\" className={classes.press} type=\"submit\">\n          <AddIcon className={classes.extendedIcon} />\n         Add\n        </Fab>\n      </form>\n      </Grid>\n\n  );\n};\n\n\nexport default PersonForm;\n","import React from \"react\";\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Clear';\n\n\n\n\nconst PhoneBook = ({ persons, showFilter, removeEntry }) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\n  // capitalize whats in the filter inputs  \n  let filterUpperCase = showFilter.toUpperCase();\n  \n  // filter though persons based on filter inputs value\n  let newPersonArray = persons.filter(person => {\n    let personInUpperCase = person.name.toUpperCase();\n    return personInUpperCase.includes(filterUpperCase);\n  });\n\n  const classes = useStyles();\n  // loop through newPersonArray and creat an li for each element\n  console.log(newPersonArray)\n  return newPersonArray.map(person => (\n    <div  className={classes.root}>\n    <Divider/>\n    <ListItem button key={person.name}>\n    <ListItemText>\n      {person.name}  :  {person.number}\n     </ListItemText>\n      <ClearIcon onClick={() => removeEntry(person)}/>\n    </ListItem>\n    </div>\n  )\n  ).sort((a,b)=> a.name>b.name)\n  ;\n};\n\nexport default PhoneBook;","import React, { useState, useEffect } from \"react\";\n// importing a modual personsService\nimport personsService from \"./Service/person\";\nimport Filter from \"./Filter\";\nimport Notification from \"./Notification\";\nimport PersonForm from \"./PersonForm\";\nimport PhoneBook from \"./PhoneBook\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [showFilter, setshowFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      margin: 50,\n     \n    },\n    paper: {\n      padding: theme.spacing(2),\n      justifyItems: 'center',\n      color: theme.palette.text.secondary,\n      overflow: 'auto',\n      height: 400,\n\n    },\n    header1: {\n      padding: theme.spacing(2),\n      justifyItems: 'center',\n      color: theme.palette.text.secondary,\n      overflow: 'auto',\n      textAlign: 'center'\n    },\n    addFriend:{\n      padding: theme.spacing(2),\n      justifyItems: 'center',\n      color: theme.palette.text.secondary,\n      overflow: 'auto',\n      \n      height: 650, \n      justifyContent: 'center'\n     \n    }\n  }));\n\n  // show data on the screen\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response);\n      })\n      .catch(error => showMessage(\"Could not retrieve data\", false));\n  }, []);\n\n  const addNewName = e => {\n    e.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    //console.log('persons.some(e => e.name === newName)',persons.some(e => e.name === newName))\n\n    // if name is already in phone book return true and alert user\n    if (persons.some(e => e.name === newName)) {\n\n      // first name equal to that name \n      let personId = persons.find(item => item.name === newName);\n\n      // assigning whats in person obj to person id to update the entry\n      let updatedEntry = Object.assign(personId, personObject);\n\n      // alert the user  to update name  and / or  number\n      if (\n        window.confirm(\n          `Do you want to update ${newName} with number ${newNumber}?`\n        )\n      ) {\n        // based on the condition it will make put request to update\n        personsService\n          .update(personId.id, personObject)\n          .then(() => {\n            setPersons(\n              // map through persons check if name is equal to new name \n              //and either return updatedEntry or item\n              persons.map(item => (item.name === newName ? updatedEntry : item))\n            );\n            // reset inputs \n            setNewName(\"\");\n            setNewNumber(\"\");\n            // alert user of the changes \n            showMessage(` ${newName} phone number updated`);\n          })\n          .catch(error => {\n            showMessage(\n              `Update failed. ${newName} has already been removed from the phone book.`,\n              false\n            );\n            setPersons(persons.filter(n => n.name !== newName));\n          });\n      }\n    } else {\n      // if number is already in phone book return true and alert user\n      if (persons.some(e => e.number === newNumber)) {\n        showMessage(`# ${newNumber} is already in the phone book.`, false);\n      } else {\n        // check if inputs are empty and set show message\n        if (newName === \"\" || newNumber === \"\") {\n          showMessage(`The name and number must not be empty`, false);\n        } else {\n          // add personObject to the data base \n          personsService\n            .create(personObject)\n            .then(returnedPerson => {\n              setPersons(persons.concat(returnedPerson));\n              // reset inputs \n              setNewName(\"\");\n              setNewNumber(\"\");\n              // alert user\n              showMessage(`User ${newName} has been added to the phone book`);\n            })\n            .catch(error => {\n              console.log(error.response.data.error)\n              return showMessage(\n                `Failed to add number. More about error: ${error.response.data.error\n                }`,\n                false\n              );\n            });\n          // make a get requests of updated data\n          personsService\n            .getAll()\n            .then(response => {\n              setPersons(response);\n            })\n            .catch(error => showMessage(\"Could not retrieve data\", false));\n        }\n      }\n    }\n  };\n\n  const removeEntry = person => {\n    // if user clicks yes to remove\n    if (window.confirm(`Remove ${person.name}?`)) {\n      // call delete request with id that needs to be deleted\n      personsService\n        .remove(person.id)\n        .then(() => {\n          // setPerson to filtered array of every preson but the deleted person\n          setPersons(persons.filter(item => item.id !== person.id));\n          showMessage(`${person.name} has been removed from the phone book`);\n        })\n        .catch(error => {\n          showMessage(\n            `Removal failed. User ${person.name\n            } has already been removed from the phone book.`,\n            false\n          );\n          // make a get requests of updated data\n          personsService\n            .getAll()\n            .then(response => {\n              setPersons(response);\n            })\n            .catch(error => showMessage(\"Could not retrieve data\", false));\n        });\n    }\n  };\n\n  // tracking values in the name input\n  const handleNameChange = e => {\n    // console.log(e.target.value);\n    setNewName(e.target.value);\n  };\n\n  // tracking values in the number input\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const showMessage = (message, successNotification = true) => {\n    // sets notication based on the true or false given by the condiyion it was called in\n    setNotification(message);\n    // boolean value if the rquest was successful or not\n    setSuccess(successNotification);\n\n    // the notification will stay on browser for 3 sec\n    setTimeout(() => {\n      setNotification(null);\n      setSuccess(null);\n    }, 3000);\n  };\n\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Grid container spacing={2}>\n      <Grid item xs={12}>\n      <Paper className={classes.header1}>\n        <h2>Phone Book</h2>\n        </Paper>\n        </Grid>\n        <Grid item xs={6} >\n          <Paper className={classes.addFriend}>\n           \n          <Paper className={classes.header1}>\n            <h2>Add a new friend</h2>\n            </Paper>\n            <PersonForm\n              addNewName={addNewName}\n              newName={newName}\n              handleNameChange={handleNameChange}\n              handleNumberChange={handleNumberChange}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.addFriend}>\n          <Paper className={classes.header1}>\n            <h2>Numbers</h2>\n            </Paper>\n            <Notification notification={notification} success={success} />\n            <Filter showFilter={showFilter} setshowFilter={setshowFilter} />\n            <Paper className={classes.paper} >\n              <List>\n              <PhoneBook\n                persons={persons}\n                showFilter={showFilter}\n                removeEntry={removeEntry}\n              />\n            </List>\n          </Paper>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}